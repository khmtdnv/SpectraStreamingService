# Generated by Django 5.2.7 on 2025-10-21 17:15

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Category name (e.g., Action, Comedy, Drama)', max_length=100, unique=True, verbose_name='name')),
                ('slug', models.SlugField(help_text='URL-friendly version of the name', max_length=100, unique=True, verbose_name='slug')),
                ('description', models.TextField(blank=True, help_text='Category description', verbose_name='description')),
                ('order', models.IntegerField(default=0, help_text='Sort order for displaying categories', verbose_name='order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ['order', 'name'],
                'indexes': [models.Index(fields=['slug'], name='movies_cate_slug_1960db_idx'), models.Index(fields=['order'], name='movies_cate_order_4d2175_idx')],
            },
        ),
        migrations.CreateModel(
            name='Movie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Movie title', max_length=255, verbose_name='title')),
                ('slug', models.SlugField(help_text='URL-friendly version of the title', max_length=255, unique=True, verbose_name='slug')),
                ('description', models.TextField(help_text='Movie synopsis/description', verbose_name='description')),
                ('year', models.IntegerField(help_text='Release year', validators=[django.core.validators.MinValueValidator(1888), django.core.validators.MaxValueValidator(2100)], verbose_name='year')),
                ('duration', models.IntegerField(help_text='Duration in minutes', verbose_name='duration')),
                ('poster', models.ImageField(help_text='Movie poster image for catalog', upload_to='movies/posters/%Y/%m/%d/', verbose_name='poster')),
                ('video_url', models.URLField(blank=True, help_text='URL to video file or streaming link', verbose_name='video URL')),
                ('video_file', models.FileField(blank=True, help_text='Video file upload (optional if video_url is provided)', null=True, upload_to='movies/videos/%Y/%m/%d/', verbose_name='video file')),
                ('director', models.CharField(blank=True, help_text='Movie director', max_length=255, verbose_name='director')),
                ('actors', models.TextField(blank=True, help_text='Main actors (comma-separated)', verbose_name='actors')),
                ('mpaa_rating', models.CharField(blank=True, choices=[('G', 'G - General Audiences'), ('PG', 'PG - Parental Guidance Suggested'), ('PG-13', 'PG-13 - Parents Strongly Cautioned'), ('R', 'R - Restricted'), ('NC-17', 'NC-17 - Adults Only')], help_text='MPAA rating (G, PG, PG-13, R, NC-17)', max_length=10, verbose_name='MPAA rating')),
                ('country', models.CharField(blank=True, help_text='Country of production', max_length=100, verbose_name='country')),
                ('views_count', models.IntegerField(default=0, help_text='Number of views', verbose_name='views count')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='movies', to='movies.category', verbose_name='category')),
            ],
            options={
                'verbose_name': 'movie',
                'verbose_name_plural': 'movies',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['slug'], name='movies_movi_slug_5ef9c7_idx'), models.Index(fields=['category'], name='movies_movi_categor_a7fa32_idx'), models.Index(fields=['year'], name='movies_movi_year_82d175_idx'), models.Index(fields=['-created_at'], name='movies_movi_created_2750ad_idx'), models.Index(fields=['-views_count'], name='movies_movi_views_c_505bc4_idx')],
            },
        ),
    ]
